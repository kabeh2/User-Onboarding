{"version":3,"sources":["components/forms/FormikSignUp.js","App.js","index.js"],"names":["FormikSignUp","withFormik","mapPropsToValues","name","email","password","role","termsOfService","validationSchema","Yup","shape","min","max","required","oneOf","handleSubmit","values","setErrors","resetForm","setSubmitting","setStatus","users","console","log","axios","post","then","response","data","catch","error","message","errors","touched","isSubmitting","status","useState","setUsers","useEffect","mounted","u","className","type","placeholder","component","value","checked","disabled","map","user","key","id","App","Component","ReactDOM","render","document","getElementById"],"mappings":"qYA0HeA,G,OAjDMC,YAAW,CAC9BC,iBAD8B,YAE5B,MAAO,CACLC,KAF8D,EAA/CA,MAED,GACdC,MAH8D,EAAzCA,OAGL,GAChBC,SAJ8D,EAAlCA,UAIN,GACtBC,KAL8D,EAAxBA,MAKxB,QACdC,eAN8D,EAAlBA,iBAMV,IAGtCC,iBAAkBC,WAAaC,MAAM,CACnCP,KAAMM,WACHE,IAAI,EAAG,uDACPC,IAAI,GAAI,wCACRC,SAAS,8BACZT,MAAOK,WACJL,MAAM,iBACNS,SAAS,qBACZR,SAAUI,WACPE,IAAI,EAAG,0BACPC,IAAI,GAAI,yBACRC,SAAS,yBACZN,eAAgBE,SAAWK,MACzB,EAAC,GACD,+CAGJC,aA3B8B,SA4B5BC,EA5B4B,GA8B3B,IADCC,EACF,EADEA,UAAWC,EACb,EADaA,UAAWC,EACxB,EADwBA,cAAeC,EACvC,EADuCA,UAAWC,EAClD,EADkDA,MAElDC,QAAQC,IAAI,YAAcF,GACL,qBAAjBL,EAAOZ,MACTa,EAAU,CAAEb,MAAO,kCAEnBoB,IACGC,KAAK,8BAA+BT,GACpCU,MAAK,SAAAC,GACJL,QAAQC,IAAI,aAAcI,EAASC,MAEnCR,EAAUO,EAASC,SAEpBC,OAAM,SAAAC,GAAK,OAAIR,QAAQQ,MAAM,UAAWA,EAAMC,YACjDb,KAEFC,GAAc,KA7CGlB,EAnEF,SAAC,GAAuD,IAArD+B,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,QAASjB,EAAmC,EAAnCA,OAAQkB,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAAa,EAC9CC,mBAAS,IADqC,mBACjEf,EADiE,KAC1DgB,EAD0D,KAiBxE,OAdAC,qBAAU,WACR,IAAIC,GAAU,EAQd,OANIA,GACEJ,GACFE,GAAS,SAAAG,GAAC,4BAAQA,GAAR,CAAWL,OAIlB,WACLI,GAAU,KAEX,CAACJ,IAGF,oCACE,sCAEA,kBAAC,IAAD,CAAMd,MAAOA,EAAOoB,UAAU,kBAC5B,kBAAC,IAAD,CAAOtC,KAAK,OAAOuC,KAAK,OAAOC,YAAY,YAC1CX,EAAO7B,MAAQ8B,EAAQ9B,MACtB,yBAAKsC,UAAU,UAAUT,EAAO7B,MAElC,kBAAC,IAAD,CAAOA,KAAK,QAAQuC,KAAK,QAAQC,YAAY,aAC5CX,EAAO5B,OAAS6B,EAAQ7B,OACvB,yBAAKqC,UAAU,UAAUT,EAAO5B,OAElC,kBAAC,IAAD,CAAOD,KAAK,WAAWuC,KAAK,WAAWC,YAAY,gBAClDX,EAAO3B,UAAY4B,EAAQ5B,UAC1B,yBAAKoC,UAAU,UAAUT,EAAO3B,UAElC,kBAAC,IAAD,CAAOuC,UAAU,SAASzC,KAAK,QAC7B,4BAAQ0C,MAAM,SAAd,SACA,4BAAQA,MAAM,mBAAd,mBACA,4BAAQA,MAAM,SAAd,UAEF,2BAAOJ,UAAU,OACf,kBAAC,IAAD,CACEC,KAAK,WACLvC,KAAK,iBACL2C,QAAS9B,EAAOT,iBAJpB,+BAQCyB,EAAOzB,gBAAkB0B,EAAQ1B,gBAChC,yBAAKkC,UAAU,UAAUT,EAAOzB,gBAElC,4BAAQmC,KAAK,SAASK,SAAUb,GAAhC,WAKF,yBAAKO,UAAU,uBACb,gDACA,4BACGpB,EAAM2B,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IAAKF,EAAK7C,iBCnDrBgD,E,iLARX,OACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,W,GAJUY,aCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f1f70981.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport \"./forms.scss\";\n\nconst SignUpForm = ({ errors, touched, values, isSubmitting, status }) => {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      if (status) {\n        setUsers(u => [...u, status]);\n      }\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [status]);\n\n  return (\n    <>\n      <h1>Signup</h1>\n\n      <Form users={users} className=\"form-container\">\n        <Field name=\"name\" type=\"text\" placeholder=\"Name...\" />\n        {errors.name && touched.name && (\n          <div className=\"errors\">{errors.name}</div>\n        )}\n        <Field name=\"email\" type=\"email\" placeholder=\"Email...\" />\n        {errors.email && touched.email && (\n          <div className=\"errors\">{errors.email}</div>\n        )}\n        <Field name=\"password\" type=\"password\" placeholder=\"Password...\" />\n        {errors.password && touched.password && (\n          <div className=\"errors\">{errors.password}</div>\n        )}\n        <Field component=\"select\" name=\"role\">\n          <option value=\"admin\">Admin</option>\n          <option value=\"authorized user\">Authorized User</option>\n          <option value=\"guest\">Guest</option>\n        </Field>\n        <label className=\"tos\">\n          <Field\n            type=\"checkbox\"\n            name=\"termsOfService\"\n            checked={values.termsOfService}\n          />\n          Accept Terms and Conditions\n        </label>\n        {errors.termsOfService && touched.termsOfService && (\n          <div className=\"errors\">{errors.termsOfService}</div>\n        )}\n        <button type=\"submit\" disabled={isSubmitting}>\n          Submit\n        </button>\n      </Form>\n\n      <div className=\"user-list-container\">\n        <h1>Registered Users</h1>\n        <ul>\n          {users.map(user => (\n            <li key={user.id}>{user.email}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nconst FormikSignUp = withFormik({\n  mapPropsToValues({ name, email, password, role, termsOfService }) {\n    return {\n      name: name || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      role: role || \"admin\",\n      termsOfService: termsOfService || false\n    };\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string()\n      .min(2, \"Your full name seems to be too short and incomplete\")\n      .max(50, \"Your full name seems to be Too Long!\")\n      .required(\"Your full name is Required\"),\n    email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"Email is Required\"),\n    password: Yup.string()\n      .min(2, \"Password is Too Short!\")\n      .max(50, \"Password is Too Long!\")\n      .required(\"No password provided.\"),\n    termsOfService: Yup.bool().oneOf(\n      [true],\n      \"Terms of Service Must Be Accepted to Join\"\n    )\n  }),\n  handleSubmit(\n    values,\n    { setErrors, resetForm, setSubmitting, setStatus, users }\n  ) {\n    console.log(\"asdfasd: \" + users);\n    if (values.email === \"waffle@syrup.com\") {\n      setErrors({ email: \"That email is already taken.\" });\n    } else {\n      axios\n        .post(\"https://reqres.in/api/users\", values)\n        .then(response => {\n          console.log(\"Response: \", response.data);\n\n          setStatus(response.data);\n        })\n        .catch(error => console.error(\"Error: \", error.message));\n      resetForm();\n    }\n    setSubmitting(false);\n  }\n})(SignUpForm);\n\nexport default FormikSignUp;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FormikSignUp from \"./components/forms/FormikSignUp\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FormikSignUp />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}